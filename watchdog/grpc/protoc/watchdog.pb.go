// Code generated by protoc-gen-go. DO NOT EDIT.
// source: watchdog.proto

package watchdog

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for creating a new customer
type Request struct {
	Data1                string   `protobuf:"bytes,1,opt,name=data1,proto3" json:"data1,omitempty"`
	Data2                string   `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	Data3                string   `protobuf:"bytes,3,opt,name=data3,proto3" json:"data3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_554efde3f2d36ab7, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetData1() string {
	if m != nil {
		return m.Data1
	}
	return ""
}

func (m *Request) GetData2() string {
	if m != nil {
		return m.Data2
	}
	return ""
}

func (m *Request) GetData3() string {
	if m != nil {
		return m.Data3
	}
	return ""
}

type Response struct {
	Data1                string   `protobuf:"bytes,1,opt,name=data1,proto3" json:"data1,omitempty"`
	Data2                string   `protobuf:"bytes,2,opt,name=data2,proto3" json:"data2,omitempty"`
	Data3                string   `protobuf:"bytes,3,opt,name=data3,proto3" json:"data3,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_554efde3f2d36ab7, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetData1() string {
	if m != nil {
		return m.Data1
	}
	return ""
}

func (m *Response) GetData2() string {
	if m != nil {
		return m.Data2
	}
	return ""
}

func (m *Response) GetData3() string {
	if m != nil {
		return m.Data3
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "watchdog.Request")
	proto.RegisterType((*Response)(nil), "watchdog.Response")
}

func init() { proto.RegisterFile("watchdog.proto", fileDescriptor_554efde3f2d36ab7) }

var fileDescriptor_554efde3f2d36ab7 = []byte{
	// 161 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4f, 0x2c, 0x49,
	0xce, 0x48, 0xc9, 0x4f, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf1, 0x95, 0xbc,
	0xb9, 0xd8, 0x83, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0x44, 0xb8, 0x58, 0x53, 0x12, 0x4b,
	0x12, 0x0d, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x98, 0xa8, 0x91, 0x04, 0x13,
	0x42, 0xd4, 0x08, 0x26, 0x6a, 0x2c, 0xc1, 0x8c, 0x10, 0x35, 0x56, 0xf2, 0xe1, 0xe2, 0x08, 0x4a,
	0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0xa5, 0xdc, 0x34, 0xa3, 0x52, 0x2e, 0x8e, 0x70, 0x90, 0x33,
	0x5d, 0xf2, 0xd3, 0x85, 0x4c, 0xb8, 0x38, 0xdd, 0xf2, 0x8b, 0x7c, 0x13, 0x8b, 0x4b, 0x52, 0x8b,
	0x84, 0x04, 0xf5, 0xe0, 0xde, 0x81, 0xba, 0x5d, 0x4a, 0x08, 0x59, 0x08, 0xe2, 0x02, 0x25, 0x06,
	0x21, 0x63, 0x2e, 0x0e, 0xb7, 0xfc, 0x22, 0xc7, 0xf4, 0xd4, 0xbc, 0x12, 0xa2, 0x35, 0x25, 0xb1,
	0x81, 0x83, 0xc8, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x7b, 0x6c, 0xea, 0x7a, 0x34, 0x01, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WatchDogClient is the client API for WatchDog service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WatchDogClient interface {
	ForMaster(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	ForAgent(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type watchDogClient struct {
	cc *grpc.ClientConn
}

func NewWatchDogClient(cc *grpc.ClientConn) WatchDogClient {
	return &watchDogClient{cc}
}

func (c *watchDogClient) ForMaster(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/watchdog.WatchDog/ForMaster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *watchDogClient) ForAgent(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/watchdog.WatchDog/ForAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WatchDogServer is the server API for WatchDog service.
type WatchDogServer interface {
	ForMaster(context.Context, *Request) (*Response, error)
	ForAgent(context.Context, *Request) (*Response, error)
}

// UnimplementedWatchDogServer can be embedded to have forward compatible implementations.
type UnimplementedWatchDogServer struct {
}

func (*UnimplementedWatchDogServer) ForMaster(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForMaster not implemented")
}
func (*UnimplementedWatchDogServer) ForAgent(ctx context.Context, req *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForAgent not implemented")
}

func RegisterWatchDogServer(s *grpc.Server, srv WatchDogServer) {
	s.RegisterService(&_WatchDog_serviceDesc, srv)
}

func _WatchDog_ForMaster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchDogServer).ForMaster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/watchdog.WatchDog/ForMaster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchDogServer).ForMaster(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _WatchDog_ForAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WatchDogServer).ForAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/watchdog.WatchDog/ForAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WatchDogServer).ForAgent(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _WatchDog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "watchdog.WatchDog",
	HandlerType: (*WatchDogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ForMaster",
			Handler:    _WatchDog_ForMaster_Handler,
		},
		{
			MethodName: "ForAgent",
			Handler:    _WatchDog_ForAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "watchdog.proto",
}
