{"version":3,"sources":["index.js"],"names":["columns","title","dataIndex","width","App","state","data","pagination","loading","base_url","window","location","origin","handleTableChange","pager","current","setState","fetch","reqwest","url","method","type","then","total","length","pageSize","this","timerID","setInterval","dataSource","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6QAOMA,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,MAAO,OAET,CACEF,MAAO,QACPC,UAAW,QACXC,MAAO,OAET,CACEF,MAAO,QACPC,UAAW,QACXC,MAAO,QAILC,E,2MACJC,MAAQ,CACNC,KAAM,GACNC,WAAY,GACZC,SAAS,EACTC,SAAUC,OAAOC,SAASC,Q,EAU5BC,kBAAoB,SAACN,GACnB,IAAMO,EAAK,eAAQ,EAAKT,MAAME,YAC9BO,EAAMC,QAAUR,EAAWQ,QAC3B,EAAKC,SAAS,CACZT,WAAYO,IAEd,EAAKG,S,EAGPA,MAAQ,WACN,EAAKD,SAAS,CAAER,SAAS,IACzBU,IAAQ,CACNC,IAAK,EAAKd,MAAMI,SAAS,QACzBW,OAAQ,MACRC,KAAM,SACLC,MAAK,SAAAhB,GACN,IAAMC,EAAU,eAAQ,EAAKF,MAAME,YACnCA,EAAWgB,MAAQjB,EAAKkB,OACxBjB,EAAWkB,SAAW,GACtB,EAAKT,SAAS,CACZR,SAAS,EACTF,KAAMA,EACNC,mB,mFA9Be,IAAD,OACjBmB,KAAKT,QACLS,KAAKC,QAAUC,aACR,kBAAM,EAAKX,UACZ,O,+BAgCP,OACE,kBAAC,IAAD,CACEjB,QAASA,EACT6B,WAAYH,KAAKrB,MAAMC,KACvBC,WAAYmB,KAAKrB,MAAME,WACvBC,QAASkB,KAAKrB,MAAMG,QACpBsB,SAAUJ,KAAKb,wB,GAjDLkB,IAAMC,WAuDxBC,IAASC,OAAO,kBAAC9B,EAAD,MAAS+B,SAASC,eAAe,U","file":"static/js/main.f5a47912.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Table } from 'antd';\nimport reqwest from 'reqwest';\n\nconst columns = [\n  {\n    title: 'Task',\n    dataIndex: 'task',\n    width: '20%',\n  },\n  {\n    title: 'State',\n    dataIndex: 'state',\n    width: '20%',\n  },\n  {\n    title: 'Timer',\n    dataIndex: 'timer',\n    width: '20%',\n  },\n];\n\nclass App extends React.Component {\n  state = {\n    data: [],\n    pagination: {},\n    loading: false,\n    base_url: window.location.origin\n  };\n  componentDidMount() {\n     this.fetch()\n     this.timerID = setInterval(\n            () => this.fetch(),\n           3000\n        );\n  }\n\n  handleTableChange = (pagination) => {\n    const pager = { ...this.state.pagination };\n    pager.current = pagination.current;\n    this.setState({\n      pagination: pager,\n    });\n    this.fetch();\n  };\n\n  fetch = () => {\n    this.setState({ loading: true });\n    reqwest({\n      url: this.state.base_url+'/task',\n      method: 'get',\n      type: 'json',\n    }).then(data => {\n      const pagination = { ...this.state.pagination };\n      pagination.total = data.length;\n      pagination.pageSize = 50;\n      this.setState({\n        loading: false,\n        data: data,\n        pagination,\n      });\n    });\n  };\n\n  render() {\n    return (\n      <Table\n        columns={columns}\n        dataSource={this.state.data}\n        pagination={this.state.pagination}\n        loading={this.state.loading}\n        onChange={this.handleTableChange}\n      />\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}