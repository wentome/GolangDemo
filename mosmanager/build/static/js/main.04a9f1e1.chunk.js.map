{"version":3,"sources":["login.js","user.js","index.js"],"names":["layout","Select","Option","labelCol","span","wrapperCol","tailLayout","offset","Login","formRef","React","createRef","onGenderChange","value","current","setFieldsValue","note","onFinish","values","fetch","method","headers","body","JSON","stringify","then","one","json","two","state","props","history","push","pathname","console","log","catch","err","onReset","resetFields","onFill","gender","ref","this","name","Item","label","rules","required","type","htmlType","onClick","Component","columns","title","dataIndex","width","User","data","pagination","loading","handleTableChange","pager","setState","ask","total","length","pageSize","dataSource","onChange","BasicRoute","Layout","Sider","Content","Footer","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04a9f1e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios' \r\nimport { Form, Input, Button, Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nclass Login extends React.Component {\r\n  formRef = React.createRef();\r\n\r\n  onGenderChange = value => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: `Hi, ${value === 'male' ? 'man' : 'lady'}!`,\r\n    });\r\n  };\r\n\r\n   onFinish=values=> {\r\n    fetch('/login', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(values),\r\n    }).then(one=>{\r\n          return one.json()\r\n      }).then(two=>{\r\n        if (two.state==\"pass\"){\r\n          this.props.history.push({pathname:'/user'})\r\n        }else{\r\n          console.log(\"login fail\")\r\n        }\r\n      }).catch(err=>{\r\n        console.log(err)\r\n      })\r\n\r\n   \r\n  };\r\n\r\n  onReset = () => {\r\n    this.formRef.current.resetFields();\r\n  };\r\n\r\n  onFill = () => {\r\n    this.formRef.current.setFieldsValue({\r\n      note: 'Hello world!',\r\n      gender: 'male',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\r\n        <Form.Item name=\"username\" label=\"UserName\" rules={[{ required: true }]}>\r\n          <Input />\r\n        </Form.Item>\r\n        <Form.Item name=\"password\" label=\"Password\" rules={[{ required: true }]}>\r\n        <Input />\r\n        </Form.Item>\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n          <Button htmlType=\"button\" onClick={this.onReset}>\r\n            Reset\r\n          </Button>\r\n          <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\r\n            Fill form\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios' \r\nimport reqwest from 'reqwest'\r\nimport { Form, Input, Button, Table } from 'antd';\r\nconst columns = [\r\n    { \r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      width: '20%',\r\n    },\r\n    { \r\n      title: 'Gender',\r\n      dataIndex: 'gender',\r\n      width: '20%',\r\n    },\r\n    { \r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n  ];\r\n  class User extends React.Component {\r\n    state = {\r\n      data: [],\r\n      pagination: {},\r\n      loading: false,\r\n    };\r\n  \r\n    componentDidMount() {\r\n      this.ask();\r\n    }\r\n     handleTableChange = (pagination) => {\r\n      const pager = { ...this.state.pagination };\r\n      pager.current = pagination.current;\r\n      this.setState({\r\n        pagination: pager,\r\n      });\r\n      this.ask();\r\n    };\r\n  \r\n    ask = () => {\r\n        this.setState({ loading: true });\r\n        fetch('/api', {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        }).then(one=>{\r\n           return one.json()\r\n        }).then(two=>{\r\n            //console.log(two)\r\n            const pagination = { ...this.state.pagination };\r\n            pagination.total = two.length;\r\n            pagination.pageSize = 50;\r\n            this.setState({\r\n                loading: false,\r\n                data: two,\r\n                pagination,\r\n            })\r\n        })\r\n\r\n    //     reqwest({\r\n    //     url: '/api',\r\n    //     method: 'get',\r\n    //     type: 'json',\r\n    //   }).then(data => {\r\n    //     const pagination = { ...this.state.pagination };\r\n    //     pagination.total = data.length;\r\n    //     pagination.pageSize = 50;\r\n    //     this.setState({\r\n    //       loading: false,\r\n    //       data: data,\r\n    //       pagination,\r\n    //     });\r\n    //   });\r\n\r\n    }\r\n    render() {\r\n      return (\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.data}\r\n          pagination={this.state.pagination}\r\n          loading={this.state.loading}\r\n          onChange={this.handleTableChange}\r\n        />\r\n      );\r\n    }\r\n}\r\n\r\nexport default User","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport {Layout } from 'antd';\n\nimport Login from './login'\nimport User from './user'\n\nconst { Sider, Content, Footer} = Layout;\nclass BasicRoute extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    render(){\n        return(\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Login}/>\n                    <Route exact path=\"/login\" component={Login}/>\n                    <Route exact path=\"/user\" component={User}/>\n                </Switch>\n            </Router>\n        )\n    }\n}\nReactDOM.render(\n  <BasicRoute/>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}